<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://www.springframework.org/schema/mvc 
		  http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-4.2.xsd
          http://www.springframework.org/schema/aop 
		  http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	 <!-- 开启注解模式 -->
	<context:annotation-config />	
	<context:component-scan base-package="com.study" />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource_first"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 连接sqlite数据库 -->
	<bean id="dateSource_second"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver2}" />
		<property name="url" value="${jdbc.url2}" />
		<property name="username" value="${jdbc.username2}" />
		<property name="password" value="${jdbc.password2}" />
	</bean>
	<!-- 下面的是切换数据库的自定义类 -->
	<bean id="dataSource" class="com.study.utils.MultipleDataSource">
	<!-- 默认使用sqlite数据库 -->
		<property name="defaultTargetDataSource" ref="dateSource_second"></property>
		<property name="targetDataSources">
			<map>
				<entry key="dataSource_first" value-ref="dataSource_first"></entry>
				<entry key="dateSource_second" value-ref="dateSource_second"></entry>
			</map>
		</property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations" value="classpath:/mappers/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.study.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory">

	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
	
	<!-- 切面 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<bean id="dataSourceAspect" class="com.study.utils.DataSourceAspect"></bean>
		<aop:config>
			<aop:aspect ref="dataSourceAspect">
				<!-- 拦截所有service方法，在dao层添加注解 -->
				<aop:pointcut expression="execution(* com.study.dao..*.*(..))" id="dataSourcePointcut"/>
				<aop:before method="intercept" pointcut-ref="dataSourcePointcut"/>
			</aop:aspect>
		</aop:config>
		
	
</beans>